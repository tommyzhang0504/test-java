#log4j.rootLogger 配置的是大于等于当前级别的日志信息的输出  
#log4j.rootLogger 用法:（注意appenderName可以是一个或多个）  
#log4j.rootLogger = 日志级别,appenderName1,appenderName2,....  
#log4j.appender.appenderName1定义的是日志的输出方式，有两种：一种是命令行输出或者叫控制台输出，另一种是文件方式保存  
#                            1）控制台输出则应该配置为org.apache.log4j.PatternLayout  
#                            2）文本方式保存应该配置为org.apache.log4j.DailyRollingFileAppender  
#                            3）也可以自定义 Appender类  
#log4j.appender.appenderName1.layout.ConversionPattern 定义的是日志内容格式  
#log4j.appender.appenderName1.file 定义了该日志文件的文件名称  
#log4j.appender.appenderName1.DatePattern 定义了日志文件重新生成的时间间隔，如果设置到天，则每天重新生成一个新的日志文件。  
#                                         旧的日志文件则以新的文件名保存，文件名称 = log4j.appender.appenderName1.file + log4j.appender.appenderName1.DatePattern   
log4j.rootLogger=info,stdout,file  
log4j.appender.stdout=org.apache.log4j.ConsoleAppender   
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout  
log4j.appender.stdout.layout.ConversionPattern=[%p][%d{yyyy-MM-dd HH:mm:ss}][%C{1}:%L] - %m%n  
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender  
log4j.appender.file.file=d\:\\log\\info(+).log  
log4j.appender.file.DatePattern='.'yyyy-MM-dd  
log4j.appender.file.layout=org.apache.log4j.PatternLayout  
log4j.appender.file.layout.ConversionPattern=[%p][%d{yyyy-MM-dd HH:mm:ss}][%C{1}:%L] - %m%n  