package com.market.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.converter.json.Jackson2ObjectMapperBuilder;
import org.springframework.stereotype.Service;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.market.dao.TbItemDao;
import com.market.pojo.EasyUIDataGridResult;
import com.market.pojo.MarketResult;
import com.market.pojo.TbItem;
import com.market.pojo.TbItemDesc;
import com.market.pojo.TbItemQuery;
import com.market.service.ItemService;

/**
 * 商品管理Service
 * @author Administrator
 *
 */

@Service
public class ItemServiceImpl implements ItemService {

	@Autowired
	private TbItemDao itemDao;
	
	public TbItem getItemById(long itemId) {
		TbItem item = itemDao.selectByPrimaryKey(itemId);
		return item;
	}

	@Override
	public EasyUIDataGridResult getItemList(int page, int rows) {
		//设置查询条件，通过拦截器进行拦截
		PageHelper.startPage(page, rows);
		//执行查询 
		TbItemQuery itemQuery = new TbItemQuery();
		List<TbItem> list = itemDao.selectByExample(itemQuery);
		//取查询结果
		PageInfo<TbItem> pageInfo = new PageInfo<>(list);
		EasyUIDataGridResult result = new EasyUIDataGridResult();
		
		result.setRows(list);
		result.setTotal(pageInfo.getTotal());
	
		// 返回结果
		return result;
	}

	@Override
	public MarketResult addItem(TbItem item, String itemDesc) {
		// 生成商品Id
		
		//补全item属性
		//向商品表插入数据 
		
		//创建一个商品描述对应的pojo
		
		//补全pojo的属性
		
		//向商品描述表插入数据
		//返回结果
		return null;
	}
	
	

}
